name: Process eco-chains Update

# This workflow is triggered when eco-chains repository dispatches an event
on:
  repository_dispatch:
    types: [eco-chains-tag-pushed]
  # Optional manual trigger for testing
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag/version from eco-chains"
        required: true
        type: string
      version_type:
        description: "Version type for the update"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
      environment:
        description: "Environment to deploy to"
        required: true
        default: "mainnet"
        type: choice
        options:
          - testnet
          - mainnet

jobs:
  direct-commit:
    name: Direct Commit to Default Branch
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Get default branch
        id: get-default-branch
        run: |
          # Get the default branch of the repository
          DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD branch' | cut -d' ' -f5)
          echo "default_branch=$DEFAULT_BRANCH" >> $GITHUB_OUTPUT

      - name: Set variables
        id: set-vars
        run: |
          # Use inputs for workflow_dispatch or client_payload for repository_dispatch
          TAG="${{ github.event.inputs.tag || github.event.client_payload.tag }}"
          VERSION_TYPE="${{ github.event.inputs.version_type || github.event.client_payload.version_type || 'patch' }}"
          ENVIRONMENT="${{ github.event.inputs.environment || github.event.client_payload.environment || 'mainnet' }}"
          
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version_type=$VERSION_TYPE" >> $GITHUB_OUTPUT
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT

      - name: Configure Git and checkout default branch
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Checkout the default branch to ensure we're working from the latest
          git checkout ${{ steps.get-default-branch.outputs.default_branch }}
          git pull

      - name: Create semantic commit and push directly
        id: create-commit
        run: |
          # Determine appropriate semantic prefix based on version type
          VERSION_TYPE="${{ steps.set-vars.outputs.version_type }}"
          TAG="${{ steps.set-vars.outputs.tag }}"
          
          # Map version type to semantic prefix according to .releaserc.json rules
          if [ "$VERSION_TYPE" == "patch" ]; then
            PREFIX="chain"  # Using "chain" type which maps to patch in .releaserc.json
          elif [ "$VERSION_TYPE" == "minor" ]; then
            PREFIX="feat"   # Using "feat" type which maps to minor in .releaserc.json
          elif [ "$VERSION_TYPE" == "major" ]; then
            PREFIX="breaking" # Using "breaking" type which maps to major in .releaserc.json
          else
            PREFIX="chain"  # Default to patch/chain if unspecified
          fi
          
          # Create commit message with appropriate semantic prefix
          COMMIT_MESSAGE="$PREFIX: update chain data from eco-chains $TAG"
          if [ "$VERSION_TYPE" == "major" ]; then
            # For major versions, add the BREAKING CHANGE footer
            COMMIT_MESSAGE="$COMMIT_MESSAGE
            
            BREAKING CHANGE: Updated chain data from eco-chains that requires major version bump"
          fi
          
          echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          
          # Create an empty commit with the semantic message
          # This is sufficient to trigger semantic-release based on the commit message
          git commit --allow-empty -m "$COMMIT_MESSAGE"
          
          # Push directly to the default branch
          git push origin ${{ steps.get-default-branch.outputs.default_branch }}
          
          echo "Successfully pushed semantic commit to ${{ steps.get-default-branch.outputs.default_branch }} branch"
          
      - name: Output commit information
        run: |
          echo "Commit pushed to default branch: ${{ steps.get-default-branch.outputs.default_branch }}"
          echo "Commit message: ${{ steps.create-commit.outputs.commit_message }}"
          
      # Manually trigger the semantic-release workflow
      - name: Trigger Semantic Release Workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'run-semantic-release.yaml',
              ref: '${{ steps.get-default-branch.outputs.default_branch }}'
            });
            console.log('Triggered semantic-release workflow manually');