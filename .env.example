
# Required for deployment
PRIVATE_KEY=
ALCHEMY_API_KEY=

# Etherscan v2 verification key
VERIFICATION_KEY=

#file or url with chain rpc and mailbox data
CHAIN_DATA_URL="https://raw.githubusercontent.com/eco/eco-chains/refs/heads/main/src/assets/chain.json"

# Deployment configuration
#file that holds the deploy addresses of the contracts
DEPLOY_FILE="out/deploy.csv"
#Salt for deterministic deployements, '2.0.1-beta.0' generate salt =>
SALT=0x88f72b566ae0c96f6fffac4bc8ac74909f61512ac0c06a8124d5ed420d306f90

# Portal configuration (optional - set if using existing portal)
PORTAL_CONTRACT=

# Bridge-specific configurations (optional - only set if deploying the corresponding prover)
#the address of the Hyperlane mailbox contract for HyperProver
MAILBOX_CONTRACT=
#the address of the router contract for MetaProver
ROUTER_CONTRACT=
#the address of the LayerZero endpoint for LayerZeroProver
LAYERZERO_ENDPOINT=
#the delegate address for LayerZero operations (optional - defaults to deployer)
LAYERZERO_DELEGATE=
#the address of the Polymer CrossL2ProverV2 contract for PolymerProver
POLYMER_CROSS_L2_PROVER_V2=

# Cross-VM prover addresses (optional - comma-separated bytes32 addresses for each prover type)
#HyperProver cross-VM provers
HYPER_CROSS_VM_PROVERS=
#MetaProver cross-VM provers  
META_CROSS_VM_PROVERS=
#LayerZeroProver cross-VM provers
LAYERZERO_CROSS_VM_PROVERS=
#PolymerProver cross-VM provers
POLYMER_CROSS_VM_PROVERS=

# Multi-chain deployment results (for MultiDeploy.sh)
RESULTS_FILE=deployments/results.json
APPEND_RESULTS=false

# Contract verification
#JSON file containing API keys for each chain's block explorer
VERIFICATION_KEYS_FILE=verification-keys.json
#Alternative: JSON string of verification keys (e.g., {"1":"etherscan-key","10":"optimism-key"})
VERIFICATION_KEYS=