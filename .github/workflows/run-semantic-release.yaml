name: Run Semantic Release

# This workflow is triggered when a push is made to the semantic-release or main branch
on:
  push:
    branches:
      - main
      - semantic-release
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "mainnet"
        type: choice
        options:
          - testnet
          - mainnet
      version:
        description: "Custom semantic version (optional)"
        required: false
        type: string


jobs:
  # Check if any commits have semantic release prefixes
  check-semantic-commits:
    name: Check for Semantic Release Commits
    runs-on: ubuntu-latest
    # Skip this check if manually triggered
    if: github.event_name != 'workflow_dispatch'
    outputs:
      has-semantic-commit: ${{ steps.check-commits.outputs.has_semantic_commit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 10 # Get enough history to check recent commits
  
      - name: Check for semantic release commits
        id: check-commits
        run: |
          # Get the latest commit message
          LATEST_COMMIT=$(git log -1 --pretty=format:"%s")
          echo "Latest commit: $LATEST_COMMIT"
            
          # Check if it has semantic prefixes that trigger a release
          if echo "$LATEST_COMMIT" | grep -E "^(fix|feat|breaking|chain|perf|docs\(README\)): " > /dev/null; then
            echo "Detected commit with semantic release prefix"
            echo "has_semantic_commit=true" >> $GITHUB_OUTPUT
          else
            echo "No semantic release prefix found in latest commit"
            echo "has_semantic_commit=false" >> $GITHUB_OUTPUT
          fi
  fetch-aws-secrets:
    name: Fetch AWS Secrets
    # Only run if this was manually triggered OR if there was a semantic commit
    needs: [check-semantic-commits]
    if: github.event_name == 'workflow_dispatch' || needs.check-semantic-commits.outputs.has-semantic-commit == 'true'
    runs-on: ubuntu-latest
    # Use environment from manual trigger or default to 'mainnet'
    environment: ${{ github.event.inputs.environment || 'mainnet' }}
    permissions:
      id-token: write # Needed for AWS OIDC authentication
      contents: read

    steps:
      # Set up AWS credentials using OIDC for secure authentication
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Fetch secrets from AWS Secrets Manager as a JSON string
      # The secret will be available as an environment variable: VERIFICATION_KEYS
      - name: Get secrets from AWS Secrets Manager
        id: fetch-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: |
            VERIFICATION_KEYS, ${{ secrets.AWS_SECRET_NAME }}
          parse-json-secrets: false # Keep as raw JSON string

      # Verify that secrets were loaded successfully
      - name: Verify secrets were loaded
        id: check-secrets
        run: |
          # Check if the secret was loaded properly
          if [ -z "$VERIFICATION_KEYS" ]; then
            echo "Error: VERIFICATION_KEYS environment variable is empty"
            exit 1
          fi
          echo "AWS Secrets loaded successfully"
          echo "success=true" >> $GITHUB_OUTPUT

  # Run semantic-release to publish new version
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: fetch-aws-secrets
    permissions:
      contents: write # Needed for github release
      issues: write # Needed for issue comments
      pull-requests: write # Needed for PR comments
      id-token: write # Needed for npm publishing with provenance

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0 # Needed for semantic-release to generate changelogs

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: Install dependencies
        uses: borales/actions-yarn@v5
        with:
          cmd: install

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Build Project
        uses: borales/actions-yarn@v5
        with:
          cmd: build
          
      - name: Setup npm token
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      # Show the commit that triggered this workflow
      - name: Display trigger commit
        run: |
          echo "This workflow was triggered by commit:"
          git log -1 --pretty=format:"%h - %an, %ar : %s"
          
      # Run semantic-release for version determination and publishing
      - name: Run Semantic Release
        uses: borales/actions-yarn@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          CUSTOM_VERSION: ${{ github.event.inputs.version }}
          RELEASE_VERSION: ${{ github.event.inputs.version }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
          CHAIN_DATA_URL: ${{ secrets.CHAIN_DATA_URL }}
          BYTECODE_PATH: ${{ secrets.BYTECODE_PATH }}
          RESULTS_FILE: ${{ secrets.RESULTS_FILE }}
          # VERIFICATION_KEYS is already set by aws-secretsmanager-get-secrets
        with: 
          cmd: npx semantic-release